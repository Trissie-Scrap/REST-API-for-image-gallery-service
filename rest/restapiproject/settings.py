"""
Django settings for restapiproject project.

Generated by 'django-admin startproject' using Django 2.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = int(os.environ.get("DEBUG", default=0))

# ALLOWED_HOSTS = ['0.0.0.0', 'localhost', '127.0.0.1']
ALLOWED_HOSTS = str(os.environ.get("DJANGO_ALLOWED_HOSTS", default="localhost 127.0.0.1 0.0.0.0 195.148.20.53 api.imager.local")).split(
    " ")

AUTH_USER_MODEL = 'restapi.MyUser'

# Application definition

INSTALLED_APPS = [
    # django stuff
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # rest framwwork
    'rest_framework',
    'rest_framework.authtoken',

    # rest api
    'restapi.apps.RestapiConfig',
    'minio_storage',  # https://github.com/py-pa/django-minio-storage
    'django_filters',
    'django_extensions',
    'drf_yasg',  # https://github.com/axnsan12/drf-yasg
    'cacheops',  # https://github.com/Suor/django-cacheops
    'social_django',  # python social auth
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',
]

ROOT_URLCONF = 'restapiproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'restapiproject.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': str(os.environ.get("SQL_ENGINE", "django.db.backends.sqlite3")),
        'NAME': str(os.environ.get("SQL_DATABASE", os.path.join(BASE_DIR, "db.sqlite3"))),
        'USER': str(os.environ.get("SQL_USER", "monkey_user")),
        'PASSWORD': str(os.environ.get("SQL_PASSWORD", "monkey_pass")),
        'HOST': os.environ.get("SQL_HOST", "pgmaster"),
        'PORT': 5432,
        'TEST': {
            'NAME': os.getenv("TEST_DATABASE_NAME", 'mytestdatabase'),
        },
    }
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,

    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
        'graypy': {
            'level': 'INFO',
            'class': 'graypy.GELFUDPHandler',
            'host': 'graylog',
            'port': 12201,
        },
    },
    'loggers': {
        '': {
            'handlers': ['console', 'graypy'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
        },
        'django': {
            'handlers': ['console', 'graypy'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
            'propagate': False,
        },
        'restapi': {
            'handlers': ['console', 'graypy'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
            'propagate': False,
        },
        'minio_storage': {
            'handlers': ['console', 'graypy'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
        },
    },
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

USE_AUHENTICATION = os.getenv('USE_AUHENTICATION', 'True') == 'True'
# DJANGO REST FRMEWORK STUFF
REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'restapi.pagination.DefaultPagination',
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend',
                                'rest_framework.filters.OrderingFilter', ]
}
if USE_AUHENTICATION:
    REST_FRAMEWORK['DEFAULT_AUTHENTICATION_CLASSES'] = [
        'rest_framework.authentication.BasicAuthentication',  # For postman
        'rest_framework.authentication.SessionAuthentication',  # for testing
        'rest_framework.authentication.TokenAuthentication',  # For api
    ]

AUTHENTICATION_BACKENDS = (
    'social_core.backends.google.GoogleOAuth2',
    'social_core.backends.facebook.FacebookOAuth2',
    'django.contrib.auth.backends.ModelBackend',
)

# MINIO
DEFAULT_FILE_STORAGE = "minio_storage.storage.MinioMediaStorage"
MINIO_STORAGE_ENDPOINT = 'minio:9000'
MINIO_STORAGE_ACCESS_KEY = os.getenv("MINIO_ACCESS_KEY", "minio")
MINIO_STORAGE_SECRET_KEY = os.getenv("MINIO_SECRET_KEY", "minio123")
MINIO_STORAGE_USE_HTTPS = False
MINIO_STORAGE_MEDIA_BUCKET_NAME = 'django-media'
MINIO_STORAGE_AUTO_CREATE_MEDIA_BUCKET = True
MINIO_STORAGE_MEDIA_URL = '{}/django-media'.format(os.getenv('MINIO_STORAGE_ENDPOINT', 'localhost:9001'))

# redis
CACHEOPS_REDIS = "redis://redis:6379/"

CACHEOPS_DEFAULTS = {
    'timeout': 60 * 60
}
CACHEOPS = {
    'auth.user': {'ops': 'get', 'timeout': 60 * 15},
    'auth.*': {'ops': ('fetch', 'get')},
    'auth.permission': {'ops': 'all'},
    'restapi.*': {'ops': 'all'},
}

# SOCIAL AUTHENTICATION SETTINGS

SOCIAL_AUTH_POSTGRES_JSONFIELD = True

SOCIAL_AUTH_FACEBOOK_KEY = os.getenv('FACEBOOK_KEY', '3178128918884628')
SOCIAL_AUTH_FACEBOOK_SECRET = os.getenv('FACEBOOK_SECRET', 'eff1275d9a8a002bd58b76289856f0eb')

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = os.getenv('GOOGLE_KEY', '148594431939-rvr7vi6m1e5j01aaiipsbrp11bolf1ln.apps.googleusercontent.com')
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = os.getenv('GOOGLE_SECRET', 'wpSmPdzbxx08otEvWZmt2Fw8')

SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/images/'




# Define SOCIAL_AUTH_FACEBOOK_SCOPE to get extra permissions from facebook. Email is not sent by default, to get it, you must request the email permission:
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
    'fields': 'id, name, email'}
FACEBOOK_EXTENDED_PERMISSIONS = ['email']
SOCIAL_AUTH_ADMIN_USER_SEARCH_FIELDS = ['username', 'first_name', 'email']
SOCIAL_AUTH_USERNAME_IS_FULL_EMAIL = True

SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    'social_core.pipeline.social_auth.associate_by_email',  # <- this line not included by default
    'social_core.pipeline.user.create_user',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
)
