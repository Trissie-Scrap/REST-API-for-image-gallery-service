global
   maxconn 70000

defaults
    option http-server-close
    mode http
    log global
    option httplog
    timeout connect 5s
    timeout client  20s
    timeout check   10s
    timeout server  15s
    timeout http-keep-alive 1s
    timeout http-request 10s
    default-server inter 3s fall 2 rise 2 slowstart 60s

# Enable stats api on hostip:81/stats
listen stats
    bind  *:81
    mode http
    stats enable
    stats hide-version
    stats realm Haproxy\ Statistics
    stats uri /stats
    stats auth admin:admin

# Handle: Internet -> haproxy -> varnish / (grafana, graylog)
frontend httpin
    bind *:80
    default_backend varnish

    acl host_grafana hdr(host) -i grafana.imager.local
    use_backend grafana_backend if host_grafana

    acl host_graylog hdr(host) -i graylog.imager.local
    use_backend graylog_backend if host_graylog

    acl host_api hdr(host) -i api.imager.local
    use_backend api_backend if host_api

# Handle: varnish -> haproxy -> service
frontend from_varnish
    bind *:8080

    # Define hosts
    default_backend no_match

    acl host_minio hdr(host) -i minio.imager.local
    use_backend minio_backend if host_minio

    acl host_front hdr(host) -i front.imager.local
    use_backend front_backend if host_front

# Backends
backend varnish
    http-request set-header X-Forwarded-Port %[dst_port]
    server varnish1 varnish:80

backend minio_backend
    http-request set-header X-Forwarded-Port %[dst_port]
    server s1 minio:9000

backend graylog_backend
    http-request set-header X-Forwarded-Port %[dst_port]
    server s1 graylog:9000

backend grafana_backend
    http-request set-header X-Forwarded-Port %[dst_port]
    server s1 grafana:3000

backend api_backend
    http-request set-header X-Forwarded-Port %[dst_port]
    server s1 rest:8000

backend front_backend
    http-request set-header X-Forwarded-Port %[dst_port]
    server s1 minio:9000

backend no_match
    http-request deny deny_status 400